CREATE OR REPLACE TRIGGER LDC_AUDITORIAPROGRAMADOR
BEFORE INSERT OR UPDATE ON LDC_PROGRAMADOR
FOR EACH ROW
BEGIN
	IF :NEW.PGIDENT IS NULL THEN
        SELECT SEQ_LDC_PROGRAMADOR.NEXTVAL INTO :NEW.PGIDENT FROM DUAL;
    END IF;

  	:NEW.PGUSUAR := USER;
  	:NEW.PGFEACT := SYSDATE;

EXCEPTION
	WHEN OTHERS THEN 
		DBMS_OUTPUT.PUT_LINE(SQLERRM);

END LDC_AUDITORIAPROGRAMADOR;
/

CREATE OR REPLACE TRIGGER LDC_AUDITORIALENGUPROG
BEFORE INSERT OR UPDATE ON LDC_LENGUPROG
FOR EACH ROW
BEGIN
    IF :NEW.LPIDENT IS NULL THEN
        SELECT SEQ_LDC_LENGUPROG.NEXTVAL INTO :NEW.LPIDENT FROM DUAL;
    END IF;

    :NEW.LPUSUAR := USER;
    :NEW.LPFEACT := SYSDATE;

EXCEPTION
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE(SQLERRM);

END LDC_AUDITORIALENGUPROG;
/

CREATE OR REPLACE TRIGGER LDC_AUDITORIAPROYECTO
BEFORE INSERT OR UPDATE ON LDC_PROYECTO
FOR EACH ROW
BEGIN
    IF :NEW.PYIDENT IS NULL THEN
        SELECT SEQ_LDC_PROYECTO.NEXTVAL INTO :NEW.PYIDENT FROM DUAL;
    END IF;

    :NEW.PYUSUAR := USER;
    :NEW.PYFEACT := SYSDATE;

EXCEPTION
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE(SQLERRM);

END LDC_AUDITORIAPROYECTO;
/

CREATE OR REPLACE TRIGGER LDC_AUDITORIA_PROGLEGPRO
BEFORE INSERT OR UPDATE ON LDC_PROGLEGPRO
FOR EACH ROW
BEGIN
    :NEW.PLPUSUAR := USER;
    :NEW.PLPFEACT := SYSDATE;

EXCEPTION
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE(SQLERRM);

END LDC_AUDITORIA_PROGLEGPRO;
/

CREATE OR REPLACE TRIGGER LDC_AUDITORIA_PROGPROYECTO
BEFORE INSERT OR UPDATE ON LDC_PROGPROYECTO
FOR EACH ROW
BEGIN
    :NEW.PPUSUAR := USER;
    :NEW.PPFEACT := SYSDATE;

EXCEPTION
    WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE(SQLERRM);

END LDC_AUDITORIA_PROGPROYECTO;
/


